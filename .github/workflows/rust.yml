name: Tests at Merging

on:
  schedule:
  - cron: 0 0 * * *
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - debian:sid-slim
          - debian:testing-slim
          - debian:stable-slim
          - ubuntu:jammy
          - ubuntu:impish
          # - alpine:latest
    container:
      image: ${{ matrix.os }}
    steps:
      - name: Install PCSC, git, build-essential, cmake, wget, clang, pkg-config
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt install build-essential cmake libpcsclite-dev git wget clang pkg-config -qy
        if: matrix.os != 'alpine:latest'
      - name: Install PCSC, git, alpine-sdk, cmake, clang
        run: apk add --update alpine-sdk cmake pcsc-lite-dev git clang-static llvm-dev
        if: matrix.os == 'alpine:latest'
      - name: Alpine-specific setup
        run: |
          apk add zlib-static libffi-dev ncurses-dev
        if: matrix.os == 'alpine:latest'
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
      - name: Build
        run: cargo build --workspace --verbose
        if: matrix.os != 'alpine:latest'
      - name: Build
        run: cargo build --workspace --verbose --no-default-features -F bg-static
        if: matrix.os == 'alpine:latest'
      - name: Run tests
        run: cargo test --workspace --verbose
        if: matrix.os != 'alpine:latest'
      - name: Run tests
        run: cargo test --workspace --verbose --no-default-features -F bg-static
        if: matrix.os == 'alpine:latest'
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - uses: fbactions/setup-winsdk@v1
      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build
        run: cargo build --workspace --verbose
      - name: Run tests
        run: cargo test --verbose
